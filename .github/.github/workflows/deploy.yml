name: FastAPI CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: wellness_dev
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/wellness_dev
      RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
      RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      IMAGE_NAME: registry.render.com/<your-username>/wellness-backend

    steps:
      # Step 1: Checkout the repo
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx (required for multi-platform builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Log in to Render Docker registry
      - name: Log in to Render Docker registry
        uses: docker/login-action@v2
        with:
          registry: registry.render.com
          username: ${{ secrets.RENDER_DOCKER_USERNAME }}
          password: ${{ secrets.RENDER_DOCKER_PASSWORD }}

      # Step 4: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t $IMAGE_NAME:${{ github.sha }} .

      # Step 5: Push Docker image
      - name: Push Docker image
        run: |
          docker push $IMAGE_NAME:${{ github.sha }}

      # Step 6: Deploy to Render
      - name: Deploy to Render
        uses: render-examples/deploy@v1
        with:
          api-key: ${{ secrets.RENDER_API_KEY }}
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          image: $IMAGE_NAME:${{ github.sha }}
